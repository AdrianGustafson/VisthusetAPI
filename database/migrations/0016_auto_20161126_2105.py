# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-11-26 21:05
from __future__ import unicode_literals

import database.models
import database.validators
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0015_auto_20161126_1036'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accomodation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='boendeanläggning')),
                ('classification', models.CharField(max_length=10, verbose_name='klass')),
                ('telephone', models.CharField(max_length=15, verbose_name='telefon')),
                ('adress', models.CharField(max_length=25, verbose_name='gatuadress')),
                ('postCode', models.CharField(max_length=8, verbose_name='postkod')),
                ('location', models.CharField(max_length=25, verbose_name='ort')),
                ('email', models.EmailField(max_length=254, verbose_name='E-postadress')),
                ('website', models.URLField(verbose_name='hemsida')),
            ],
            options={
                'verbose_name': 'boendeanläggning',
                'verbose_name_plural': 'boendeanläggningar',
            },
        ),
        migrations.CreateModel(
            name='BikeExtra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('child_seat', 'barnsadel'), ('bike_carriage', 'cykelkärra')], max_length=10, verbose_name='cykeltillbehör')),
                ('number', models.PositiveIntegerField(default=None, verbose_name='Nummer')),
                ('attached_to', models.CharField(blank=True, max_length=10, verbose_name='knuten till cykel')),
            ],
        ),
        migrations.CreateModel(
            name='Discount_codes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15, verbose_name='kod')),
                ('guest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Guest', verbose_name='gäst')),
            ],
        ),
        migrations.CreateModel(
            name='Lunch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('vegetarian', 'vegetarisk'), ('meat', 'kallskuret'), ('fish', 'Vätternröding')], default='vegetarian', max_length=15, verbose_name='lunchalternativ')),
                ('price', models.PositiveIntegerField(default=95, verbose_name='pris')),
            ],
            options={
                'verbose_name': 'lunch',
                'verbose_name_plural': 'luncher',
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=25, verbose_name='namn')),
                ('standard', models.CharField(choices=[('hotel', 'Hotell'), ('hote_budget', 'Hotell budget'), ('hostel', 'Vandrarhem')], max_length=20, verbose_name='standard')),
                ('max_guests', models.PositiveIntegerField(verbose_name='Max antal gäster')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=7, verbose_name='pris exkl. moms')),
                ('describtion', models.TextField(blank=True, max_length=255, verbose_name='Beskrivning')),
                ('owned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Accomodation', verbose_name='anläggning')),
            ],
            options={
                'verbose_name': 'rum',
                'ordering': ['owned_by'],
            },
        ),
        migrations.CreateModel(
            name='Utilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'tillbehör',
            },
        ),
        migrations.AlterModelOptions(
            name='bike',
            options={'ordering': ['-attribute', 'number'], 'verbose_name': 'cykel', 'verbose_name_plural': 'cyklar'},
        ),
        migrations.AlterModelOptions(
            name='booking',
            options={'ordering': ['booking_date'], 'verbose_name': 'Bokning', 'verbose_name_plural': 'bokningar'},
        ),
        migrations.AddField(
            model_name='bike',
            name='attribute',
            field=models.CharField(choices=[('vuxen', 'vuxen'), ('barn', 'barn')], max_length=10, null=True, verbose_name='vuxen/barn'),
        ),
        migrations.AddField(
            model_name='bike',
            name='extra',
            field=models.CharField(blank=True, choices=[('child_seat', 'barnsadel'), ('bike_carriage', 'cykelkärra')], max_length=15, verbose_name='Knuten till tillbehör'),
        ),
        migrations.AddField(
            model_name='bike',
            name='number',
            field=models.PositiveIntegerField(null=True, verbose_name='Nummer'),
        ),
        migrations.AddField(
            model_name='bike',
            name='wheelsize',
            field=models.CharField(choices=[('large', '28"'), ('medium', '26"'), ('small', '22"')], max_length=10, null=True, verbose_name='Däckdiameter'),
        ),
        migrations.AddField(
            model_name='booking',
            name='endDate',
            field=models.DateField(blank=True, null=True, validators=[database.validators.validate_booking_date], verbose_name='datum för hemresa'),
        ),
        migrations.AddField(
            model_name='booking',
            name='longest_prel',
            field=models.DateTimeField(null=True, validators=[database.validators.validate_preliminary], verbose_name='längsta preliminärbokning'),
        ),
        migrations.AddField(
            model_name='booking',
            name='other',
            field=models.TextField(blank=True, max_length=255, verbose_name='övrigt'),
        ),
        migrations.AddField(
            model_name='booking',
            name='payed',
            field=models.BooleanField(default=False, verbose_name='betald'),
        ),
        migrations.AddField(
            model_name='booking',
            name='preliminary',
            field=models.BooleanField(default=False, verbose_name='preliminär'),
        ),
        migrations.AddField(
            model_name='booking',
            name='startDate',
            field=models.DateField(blank=True, null=True, validators=[database.validators.validate_booking_date], verbose_name='datum för avresa'),
        ),
        migrations.AlterField(
            model_name='bike',
            name='bikeKeyNo',
            field=models.CharField(blank=True, max_length=15, verbose_name='Cykelnyckel'),
        ),
        migrations.AlterField(
            model_name='bike',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='bike',
            name='rentOutCount',
            field=models.IntegerField(default=0, verbose_name='antal uthyrningar'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='bikes',
            field=models.ManyToManyField(blank=True, to='database.Bike', verbose_name='cyklar'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='booking_date',
            field=models.DateField(default=datetime.date.today, validators=[database.validators.validate_booking_date], verbose_name='bokningsdatum'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='booking_id',
            field=models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='boknings id'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='discount_code',
            field=models.CharField(blank=True, max_length=15, null=True, validators=[database.models.validate_discount_code], verbose_name='rabattkod'),
        ),
        migrations.AlterField(
            model_name='damages',
            name='damageType',
            field=models.TextField(max_length=200, verbose_name='beskrivning av skada'),
        ),
        migrations.AlterUniqueTogether(
            name='bike',
            unique_together=set([('number', 'attribute')]),
        ),
        migrations.AddField(
            model_name='booking',
            name='accomodation',
            field=models.ManyToManyField(blank=True, to='database.Accomodation', verbose_name='boende'),
        ),
        migrations.AddField(
            model_name='booking',
            name='bike_extras',
            field=models.ManyToManyField(blank=True, to='database.BikeExtra', verbose_name='cykeltillbehör'),
        ),
        migrations.AddField(
            model_name='booking',
            name='utilities',
            field=models.ManyToManyField(blank=True, to='database.Utilities', verbose_name='tillbehör'),
        ),
    ]
